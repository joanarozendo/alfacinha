{"ast":null,"code":"import axios from 'axios';\nconst zomatoApi = axios.create({\n  baseURL: 'https://developers.zomato.com/api/v2.1',\n  headers: {\n    'user-key': 'e11fa2bac7d90c8e1c7b4b367823e292'\n  }\n});\nexport const listRestaurants = async function () {\n  try {\n    const response1 = await zomatoApi.get('/search?entity_id=82&entity_type=city&start=1&count=20&cuisines=308');\n    const response2 = await zomatoApi.get('/search?entity_id=82&entity_type=city&start=21&count=40&cuisines=308');\n    const response3 = await zomatoApi.get('/search?entity_id=82&entity_type=city&start=41&count=60&cuisines=308');\n    const response4 = await zomatoApi.get('/search?entity_id=82&entity_type=city&start=61&count=80&cuisines=308');\n    const response5 = await zomatoApi.get('/search?entity_id=82&entity_type=city&start=81&count=100&cuisines=308');\n    const array1 = response1.data.restaurants;\n    const array2 = response2.data.restaurants;\n    const array3 = response3.data.restaurants;\n    const array4 = response4.data.restaurants;\n    const array5 = response5.data.restaurants;\n    const newArray = [...array1, ...array2, ...array3, ...array4, ...array5];\n    return newArray;\n  } catch (error) {\n    console.log('There was an error from ZOMATO API');\n    throw error;\n  }\n};\nexport const loadRestaurant = async id => {\n  try {\n    const response = await zomatoApi.get(`/restaurant?res_id=${id}`);\n    const singleRestaurant = response.data;\n    console.log(response.data);\n    return singleRestaurant;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}; // export const loadRestaurant = async function() {\n//   try {\n//     const response = await zomatoApi.get(\n//       '/search?entity_id=82&entity_type=city&start=81&count=100&cuisines=308'\n//     );\n//     const singleRestaurant = response.data.singleRestaurant;\n//     return singleRestaurant;\n//   } catch (error) {\n//     throw error;\n//   }\n// };","map":{"version":3,"sources":["/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/src/services/restaurantZomato.js"],"names":["axios","zomatoApi","create","baseURL","headers","listRestaurants","response1","get","response2","response3","response4","response5","array1","data","restaurants","array2","array3","array4","array5","newArray","error","console","log","loadRestaurant","id","response","singleRestaurant"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,wCADoB;AAE7BC,EAAAA,OAAO,EAAE;AACP,gBAAY;AADL;AAFoB,CAAb,CAAlB;AAOA,OAAO,MAAMC,eAAe,GAAG,kBAAkB;AAC/C,MAAI;AACF,UAAMC,SAAS,GAAG,MAAML,SAAS,CAACM,GAAV,CACtB,qEADsB,CAAxB;AAGA,UAAMC,SAAS,GAAG,MAAMP,SAAS,CAACM,GAAV,CACtB,sEADsB,CAAxB;AAGA,UAAME,SAAS,GAAG,MAAMR,SAAS,CAACM,GAAV,CACtB,sEADsB,CAAxB;AAGA,UAAMG,SAAS,GAAG,MAAMT,SAAS,CAACM,GAAV,CACtB,sEADsB,CAAxB;AAGA,UAAMI,SAAS,GAAG,MAAMV,SAAS,CAACM,GAAV,CACtB,uEADsB,CAAxB;AAIA,UAAMK,MAAM,GAAGN,SAAS,CAACO,IAAV,CAAeC,WAA9B;AACA,UAAMC,MAAM,GAAGP,SAAS,CAACK,IAAV,CAAeC,WAA9B;AACA,UAAME,MAAM,GAAGP,SAAS,CAACI,IAAV,CAAeC,WAA9B;AACA,UAAMG,MAAM,GAAGP,SAAS,CAACG,IAAV,CAAeC,WAA9B;AACA,UAAMI,MAAM,GAAGP,SAAS,CAACE,IAAV,CAAeC,WAA9B;AAEA,UAAMK,QAAQ,GAAG,CAAC,GAAGP,MAAJ,EACf,GAAGG,MADY,EAEf,GAAGC,MAFY,EAGf,GAAGC,MAHY,EAIf,GAAGC,MAJY,CAAjB;AAMA,WAAOC,QAAP;AACD,GA9BD,CA8BE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,UAAMF,KAAN;AACD;AACF,CAnCM;AAqCP,OAAO,MAAMG,cAAc,GAAG,MAAMC,EAAN,IAAY;AACxC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,SAAS,CAACM,GAAV,CAAe,sBAAqBiB,EAAG,EAAvC,CAAvB;AACA,UAAME,gBAAgB,GAAGD,QAAQ,CAACZ,IAAlC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACZ,IAArB;AAEA,WAAOa,gBAAP;AACD,GAND,CAME,OAAON,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMA,KAAN;AACD;AACF,CAXM,C,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\nconst zomatoApi = axios.create({\n  baseURL: 'https://developers.zomato.com/api/v2.1',\n  headers: {\n    'user-key': 'e11fa2bac7d90c8e1c7b4b367823e292'\n  }\n});\n\nexport const listRestaurants = async function () {\n  try {\n    const response1 = await zomatoApi.get(\n      '/search?entity_id=82&entity_type=city&start=1&count=20&cuisines=308'\n    );\n    const response2 = await zomatoApi.get(\n      '/search?entity_id=82&entity_type=city&start=21&count=40&cuisines=308'\n    );\n    const response3 = await zomatoApi.get(\n      '/search?entity_id=82&entity_type=city&start=41&count=60&cuisines=308'\n    );\n    const response4 = await zomatoApi.get(\n      '/search?entity_id=82&entity_type=city&start=61&count=80&cuisines=308'\n    );\n    const response5 = await zomatoApi.get(\n      '/search?entity_id=82&entity_type=city&start=81&count=100&cuisines=308'\n    );\n\n    const array1 = response1.data.restaurants;\n    const array2 = response2.data.restaurants;\n    const array3 = response3.data.restaurants;\n    const array4 = response4.data.restaurants;\n    const array5 = response5.data.restaurants;\n\n    const newArray = [...array1,\n      ...array2,\n      ...array3,\n      ...array4,\n      ...array5\n    ]\n    return newArray\n  } catch (error) {\n    console.log('There was an error from ZOMATO API');\n    throw error;\n  }\n};\n\nexport const loadRestaurant = async id => {\n  try {\n    const response = await zomatoApi.get(`/restaurant?res_id=${id}`);\n    const singleRestaurant = response.data;\n    console.log(response.data);\n\n    return singleRestaurant;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n// export const loadRestaurant = async function() {\n//   try {\n//     const response = await zomatoApi.get(\n//       '/search?entity_id=82&entity_type=city&start=81&count=100&cuisines=308'\n//     );\n//     const singleRestaurant = response.data.singleRestaurant;\n//     return singleRestaurant;\n//   } catch (error) {\n//     throw error;\n//   }\n// };"]},"metadata":{},"sourceType":"module"}