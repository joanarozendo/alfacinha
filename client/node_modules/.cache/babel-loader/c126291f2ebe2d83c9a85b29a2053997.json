{"ast":null,"code":"import _objectSpread from \"/Users/joaoevangelho/ironhack/projects/alfacinha/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/joaoevangelho/ironhack/projects/alfacinha/client/src/views/Comments/CommentCreateView.jsx\";\nimport React, { Component } from 'react';\nimport { create as createCommentService } from './../../services/comments';\n\nclass CommentEditView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      text: '',\n      restaurant: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmission = this.handleFormSubmission.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const resId = this.props.match.params.id;\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState(_objectSpread({}, this.state, {\n      [name]: value,\n      restaurant: resId\n    }));\n  }\n\n  async handleFormSubmission(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          text = _this$state.text,\n          image = _this$state.image;\n    const resId = this.props.match.params.id;\n\n    try {\n      /* const commentDocument = */\n      await createCommentService({\n        text,\n        image,\n        restaurant: resId\n      });\n      this.props.onSubmit(); // this.props.history.push(`/restaurant/${resId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleFileChange(event) {\n    const file = event.target.files[0];\n    this.setState(_objectSpread({}, this.state, {\n      image: file\n    }));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"main\", {\n      className: \"pl-4 ml-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmission,\n      className: \"form-signin w-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"text\",\n      id: \"txt\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"textarea\", {\n      placeholder: \"Write your comment here\",\n      value: text || '',\n      name: \"text\",\n      className: \"form-control mb-3\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image\",\n      id: \"image\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Image\"), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      className: \"form-control mb-3\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg MyBtn btn-block mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Comment\")));\n  }\n\n}\n\nexport default CommentEditView;","map":{"version":3,"sources":["/Users/joaoevangelho/ironhack/projects/alfacinha/client/src/views/Comments/CommentCreateView.jsx"],"names":["React","Component","create","createCommentService","CommentEditView","constructor","props","state","image","text","restaurant","handleInputChange","bind","handleFormSubmission","handleFileChange","event","resId","match","params","id","name","target","value","setState","preventDefault","onSubmit","error","console","log","file","files","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { create as createCommentService } from './../../services/comments';\n\nclass CommentEditView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      text: '',\n      restaurant: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmission = this.handleFormSubmission.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const resId = this.props.match.params.id;\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      ...this.state,\n      [name]: value,\n      restaurant: resId\n    });\n  }\n\n  async handleFormSubmission(event) {\n    event.preventDefault();\n    const { text, image } = this.state;\n    const resId = this.props.match.params.id;\n\n    try {\n      /* const commentDocument = */ await createCommentService({\n        text,\n        image,\n        restaurant: resId\n      });\n\n      this.props.onSubmit();\n      // this.props.history.push(`/restaurant/${resId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleFileChange(event) {\n    const file = event.target.files[0];\n    this.setState({\n      ...this.state,\n      image: file\n    });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <main className=\"pl-4 ml-4\">\n        <form onSubmit={this.handleFormSubmission} className=\"form-signin w-75\">\n          <label htmlFor=\"text\" id=\"txt\" className=\"sr-only\">\n            Comment\n          </label>\n          <textarea\n            placeholder=\"Write your comment here\"\n            value={text || ''}\n            name=\"text\"\n            className=\"form-control mb-3\"\n            onChange={this.handleInputChange}\n          ></textarea>\n          <label htmlFor=\"image\" id=\"image\" className=\"sr-only\">\n            Image\n          </label>\n          <input\n            type=\"file\"\n            name=\"image\"\n            className=\"form-control mb-3\"\n            onChange={this.handleFileChange}\n          />\n          <button className=\"btn btn-lg MyBtn btn-block mb-5\">Comment</button>\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default CommentEditView;\n"]},"metadata":{},"sourceType":"module"}