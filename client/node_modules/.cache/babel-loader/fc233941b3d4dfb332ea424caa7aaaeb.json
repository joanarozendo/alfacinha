{"ast":null,"code":"import _classCallCheck from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import mapboxgl from\"mapbox-gl/dist/mapbox-gl\";// NEW\nimport\"mapbox-gl/dist/mapbox-gl.css\";// Import of Mapbox CSS\nmapboxgl.accessToken=\"pk.eyJ1IjoiZ3RjYXJtb25hIiwiYSI6ImNrMzc1dmxnNTAyb3kzaG5vZmhhazYzcTAifQ.pn8VB17KBKKfWtOmPo7kWQ\";var MapBox=/*#__PURE__*/function(_Component){_inherits(MapBox,_Component);function MapBox(props){var _this;_classCallCheck(this,MapBox);_this=_possibleConstructorReturn(this,_getPrototypeOf(MapBox).call(this,props));_this.getCurrentCoordinates=function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){_this.setState({lng:position.coords.longitude,lat:position.coords.latitude});_this.initMap(_this.state.lng,_this.state.lat);});}};_this.state={lng:\"\",lat:\"\",restaurants:null};_this.mapRef=React.createRef();_this.map=null;_this.initMap=_this.initMap.bind(_assertThisInitialized(_this));return _this;}_createClass(MapBox,[{key:\"initMap\",value:function initMap(lng,lat){this.map=new mapboxgl.Map({container:this.mapRef.current,// container id\nstyle:\"mapbox://styles/mapbox/streets-v11\",// stylesheet location\ncenter:[lng,lat],// starting position [lng, lat]\nzoom:11// starting zoom\n});this.map.addControl(new mapboxgl.NavigationControl());this.marker=new mapboxgl.Marker({color:\"blue\"}).setLngLat([lng,lat]).addTo(this.map);this.markerRestaurant=new mapboxgl.Marker({color:\"green\"}).setLngLat([this.props.lng,this.props.lat]).addTo(this.map);}},{key:\"componentDidMount\",value:function componentDidMount(){this.getCurrentCoordinates();}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"mapbox\",ref:this.mapRef,style:{height:200}});}}]);return MapBox;}(Component);export default MapBox;","map":{"version":3,"sources":["/Users/joaoevangelho/ironhack/projects/alfacinha/starter-code/client/src/components/MapBox.jsx"],"names":["React","Component","mapboxgl","accessToken","MapBox","props","getCurrentCoordinates","navigator","geolocation","getCurrentPosition","position","setState","lng","coords","longitude","lat","latitude","initMap","state","restaurants","mapRef","createRef","map","bind","Map","container","current","style","center","zoom","addControl","NavigationControl","marker","Marker","color","setLngLat","addTo","markerRestaurant","height"],"mappings":"w6BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CAAiD;AACjD,MAAO,8BAAP,CAAuC;AAEvCA,QAAQ,CAACC,WAAT,CACE,8FADF,C,GAGMC,CAAAA,M,gEACJ,gBAAYC,KAAZ,CAAmB,wCACjB,wEAAMA,KAAN,GADiB,MAkCnBC,qBAlCmB,CAkCK,UAAM,CAC5B,GAAIC,SAAS,CAACC,WAAd,CAA2B,CACzBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,SAAAC,QAAQ,CAAI,CACnD,MAAKC,QAAL,CAAc,CACZC,GAAG,CAAEF,QAAQ,CAACG,MAAT,CAAgBC,SADT,CAEZC,GAAG,CAAEL,QAAQ,CAACG,MAAT,CAAgBG,QAFT,CAAd,EAIA,MAAKC,OAAL,CAAa,MAAKC,KAAL,CAAWN,GAAxB,CAA6B,MAAKM,KAAL,CAAWH,GAAxC,EACD,CAND,EAOD,CACF,CA5CkB,CAEjB,MAAKG,KAAL,CAAa,CACXN,GAAG,CAAE,EADM,CAEXG,GAAG,CAAE,EAFM,CAGXI,WAAW,CAAE,IAHF,CAAb,CAKA,MAAKC,MAAL,CAAcpB,KAAK,CAACqB,SAAN,EAAd,CACA,MAAKC,GAAL,CAAW,IAAX,CACA,MAAKL,OAAL,CAAe,MAAKA,OAAL,CAAaM,IAAb,+BAAf,CATiB,aAUlB,C,2DAEOX,G,CAAKG,G,CAAK,CAChB,KAAKO,GAAL,CAAW,GAAIpB,CAAAA,QAAQ,CAACsB,GAAb,CAAiB,CAC1BC,SAAS,CAAE,KAAKL,MAAL,CAAYM,OADG,CACM;AAChCC,KAAK,CAAE,oCAFmB,CAEmB;AAC7CC,MAAM,CAAE,CAAChB,GAAD,CAAMG,GAAN,CAHkB,CAGN;AACpBc,IAAI,CAAE,EAAG;AAJiB,CAAjB,CAAX,CAOA,KAAKP,GAAL,CAASQ,UAAT,CAAoB,GAAI5B,CAAAA,QAAQ,CAAC6B,iBAAb,EAApB,EACA,KAAKC,MAAL,CAAc,GAAI9B,CAAAA,QAAQ,CAAC+B,MAAb,CAAoB,CAAEC,KAAK,CAAE,MAAT,CAApB,EACXC,SADW,CACD,CAACvB,GAAD,CAAMG,GAAN,CADC,EAEXqB,KAFW,CAEL,KAAKd,GAFA,CAAd,CAGA,KAAKe,gBAAL,CAAwB,GAAInC,CAAAA,QAAQ,CAAC+B,MAAb,CAAoB,CAAEC,KAAK,CAAE,OAAT,CAApB,EAErBC,SAFqB,CAEX,CAAC,KAAK9B,KAAL,CAAWO,GAAZ,CAAiB,KAAKP,KAAL,CAAWU,GAA5B,CAFW,EAGrBqB,KAHqB,CAGf,KAAKd,GAHU,CAAxB,CAID,C,6DAEmB,CAClB,KAAKhB,qBAAL,GACD,C,uCAcQ,CACP,MACE,4BAAK,SAAS,CAAC,QAAf,CAAwB,GAAG,CAAE,KAAKc,MAAlC,CAA0C,KAAK,CAAE,CAAEkB,MAAM,CAAE,GAAV,CAAjD,EADF,CAGD,C,oBAnDkBrC,S,EAsDrB,cAAeG,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl/dist/mapbox-gl\"; // NEW\nimport \"mapbox-gl/dist/mapbox-gl.css\"; // Import of Mapbox CSS\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZ3RjYXJtb25hIiwiYSI6ImNrMzc1dmxnNTAyb3kzaG5vZmhhazYzcTAifQ.pn8VB17KBKKfWtOmPo7kWQ\";\n\nclass MapBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: \"\",\n      lat: \"\",\n      restaurants: null\n    };\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.initMap = this.initMap.bind(this);\n  }\n\n  initMap(lng, lat) {\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current, // container id\n      style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n      center: [lng, lat], // starting position [lng, lat]\n      zoom: 11 // starting zoom\n    });\n\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.marker = new mapboxgl.Marker({ color: \"blue\" })\n      .setLngLat([lng, lat])\n      .addTo(this.map);\n    this.markerRestaurant = new mapboxgl.Marker({ color: \"green\" })\n\n      .setLngLat([this.props.lng, this.props.lat])\n      .addTo(this.map);\n  }\n\n  componentDidMount() {\n    this.getCurrentCoordinates();\n  }\n\n  getCurrentCoordinates = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          lng: position.coords.longitude,\n          lat: position.coords.latitude\n        });\n        this.initMap(this.state.lng, this.state.lat);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mapbox\" ref={this.mapRef} style={{ height: 200 }}></div>\n    );\n  }\n}\n\nexport default MapBox;\n"]},"metadata":{},"sourceType":"module"}